#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.13
# In conjunction with Tcl version 8.6
#    May 25, 2018 02:43:35 PM

import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import raspberry_support
import sala
import ir

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    sala.init()
    root = Tk()
    raspberry_support.set_Tk_var()
    top = Controle (root)
    raspberry_support.init(root, top)
    root.mainloop()

w = None
def create_Controle(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    raspberry_support.set_Tk_var()
    top = Controle (w)
    raspberry_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Controle():
    global w
    w.destroy()
    w = None


class Controle:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font9 = "-family {Segoe UI} -size 12 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("359x142+511+242")
        top.title("Controle")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.menubar = Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.style.map('TCheckbutton',background=
            [('selected', _bgcolor), ('active', _ana2color)])


        #Label Iluminacao
        self.TLabel1 = ttk.Label(top)
        self.TLabel1.place(relx=0.14, rely=0.14, height=29, width=83)
        self.TLabel1.configure(background="#d9d9d9")
        self.TLabel1.configure(foreground="#000000")
        self.TLabel1.configure(font=font9)
        self.TLabel1.configure(relief=FLAT)
        self.TLabel1.configure(text='''Iluminação''')

        #label temperatura
        self.Tlabel2 = ttk.Label(top)
        self.Tlabel2.place(relx=0.61, rely=0.14, height=25, width=93)
        self.Tlabel2.configure(background="#d9d9d9")
        self.Tlabel2.configure(foreground="#000000")
        self.Tlabel2.configure(font=font9)
        self.Tlabel2.configure(relief=FLAT)
        self.Tlabel2.configure(text='''Temperatura''')


        #Init buttons
        raspberry_support.combobox.set(value=16)
        raspberry_support.tbutton.set(value=1)
        raspberry_support.tch38.set(value=1)
        raspberry_support.tch39.set(value=1)
        raspberry_support.tch40.set(value=1)

        #Init
        ir.enviarCode("on")
        sala.ligarTodasLampadas()
        
        #ComboBox
        self.TCombobox = ttk.Combobox(top)
        self.TCombobox.place(relx=0.75, rely=0.35, relheight=0.15, relwidth=0.12)

        self.value_list = [16,17,18,19,20,21,22,23,]
        self.TCombobox.configure(values=self.value_list)
        self.TCombobox.configure(textvariable=raspberry_support.combobox)
        self.TCombobox.configure(takefocus="")
        self.TCombobox.bind("<<ComboboxSelected>>",self.arTemp)


        #Button
        self.TButton = ttk.Button(top)
        self.TButton.place(relx=0.58, rely=0.35, height=25, width=56)
        self.TButton.configure(text='''OFF''')
        self.TButton.configure(command=self.arCondicionado)


        #IluminacaoEsq
        self.TCheckbuttonEsq = ttk.Checkbutton(top)
        self.TCheckbuttonEsq.place(relx=0.14, rely=0.35, relwidth=0.2
                , relheight=0.0, height=21)
        self.TCheckbuttonEsq.configure(variable=raspberry_support.tch38)
        self.TCheckbuttonEsq.configure(takefocus="")
        self.TCheckbuttonEsq.configure(text='''Esquerda''')
        self.TCheckbuttonEsq.configure(command=self.iluminacaoEsq)

        #IluminacaoCen
        self.TCheckbuttonCen = ttk.Checkbutton(top)
        self.TCheckbuttonCen.place(relx=0.14, rely=0.5, relwidth=0.19
                , relheight=0.0, height=21)
        self.TCheckbuttonCen.configure(variable=raspberry_support.tch39)
        self.TCheckbuttonCen.configure(takefocus="")
        self.TCheckbuttonCen.configure(text='''Centro''')
        self.TCheckbuttonCen.configure(width=69)
        self.TCheckbuttonCen.configure(command=self.iluminacaoCen)

        #IluminacaoDir
        self.TCheckbuttonDir = ttk.Checkbutton(top)
        self.TCheckbuttonDir.place(relx=0.14, rely=0.64, relwidth=0.16
                , relheight=0.0, height=21)
        self.TCheckbuttonDir.configure(variable=raspberry_support.tch40)
        self.TCheckbuttonDir.configure(takefocus="")
        self.TCheckbuttonDir.configure(text='''Direita''')
        self.TCheckbuttonDir.configure(command=self.iluminacaoDir)
	#print("aquiOO")


    def iluminacaoEsq(self):
        print (raspberry_support.tch38.get())
        if raspberry_support.tch38.get() == 1 : #Ativado
            print ("EsqOn")
            sala.alterarLampada(sala.lamp1, True)
        else:                                   #Desativado
            print ("EsqOff")
            sala.alterarLampada(sala.lamp1, False)


    def iluminacaoCen(self):
        print (raspberry_support.tch39.get())
        if raspberry_support.tch39.get() == 1 : #Ativado
            print ("CenOn")
            sala.alterarLampada(sala.lamp2, True)
        else:                                   #Desativado
            sala.alterarLampada(sala.lamp2, False)
            print ("CenOff")


    def iluminacaoDir(self):
        print (raspberry_support.tch40.get())
        if raspberry_support.tch40.get() == 1 : #Ativado
            print ("DirOn")
            sala.alterarLampada(sala.lamp3, True)
        else:                                   #Desativado
            sala.alterarLampada(sala.lamp3, False)
            print ("DirOff")


    def arCondicionado(self):
        
        if raspberry_support.tbutton.get() == 0:    #Ativado
            raspberry_support.tbutton.set(value=1)
            self.TButton.configure(text='''OFF''')
            self.TCombobox.configure(state="normal")
            ir.enviarCode("on")
           # self.arTemp("<<ComboboxSelected>>")
            
        else:                                       #Desativado
            raspberry_support.tbutton.set(value=0)
            self.TButton.configure(text='''ON''')
            self.TCombobox.configure(state="disable")
            ir.enviarCode("off")

    def arTemp(self, event):
        ir.enviarCode(raspberry_support.combobox.get())


if __name__ == '__main__':
    vp_start_gui()



